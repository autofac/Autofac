<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Autofac Analyzer Rules" Description="Analyzer rules for Autofac assemblies." ToolsVersion="16.0">
  <IncludeAll Action="Warning" />
  <Rules AnalyzerId="Microsoft.Usage" RuleNamespace="Microsoft.Usage">
    <!-- Implement standard exception constructors - not all of the exception constructors (e.g., parameterless) are desired in our system. -->
    <Rule Id="CA1032" Action="None" />
    <!-- Use ArgumentNullException.ThrowIfNull - this isn't available until we stop targeting netstandard. -->
    <Rule Id="CA1510" Action="None" />
    <!-- Use ArgumentOutOfRangeException.ThrowIfNegative - this isn't available until we stop targeting anything below net8.0. -->
    <Rule Id="CA1512" Action="None" />
    <!-- Use ObjectDisposedException.ThrowIf - this isn't available until we stop targeting anything below net8.0. -->
    <Rule Id="CA1513" Action="None" />
    <!-- Change names to avoid reserved word overlaps (e.g., Delegate, GetType, etc.) - too many of these in the public API, we'd break if we fixed it. -->
    <Rule Id="CA1716" Action="None" />
    <!-- Cache a CompositeFormat object for use in String.Format - this isn't available until we stop targeting netstandard, and we only String.Format when throwing exceptions so the work/complexity isn't justified to increase perf just for those situations. -->
    <Rule Id="CA1863" Action="None" />
    <!-- Implement serialization constructors - false positive when building .NET Core. -->
    <Rule Id="CA2229" Action="None" />
    <!-- Mark ISerializable types with SerializableAttribute - false positive when building .NET Core. -->
    <Rule Id="CA2237" Action="None" />
  </Rules>
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <!-- Prefix local calls with this. -->
    <Rule Id="SA1101" Action="None" />
    <!-- Use built-in type alias. -->
    <Rule Id="SA1121" Action="None" />
    <!-- Use String.Empty instead of "". -->
    <Rule Id="SA1122" Action="None" />
    <!-- Using statements must be inside a namespace. -->
    <Rule Id="SA1200" Action="None" />
    <!-- Enforce order of class members by member type. -->
    <Rule Id="SA1201" Action="None" />
    <!-- Enforce order of class members by member visibility. -->
    <Rule Id="SA1202" Action="None" />
    <!-- Enforce order of constantand static members. -->
    <Rule Id="SA1203" Action="None" />
    <!-- Enforce order of static vs. non-static members. -->
    <Rule Id="SA1204" Action="None" />
    <!-- Modifiers are not ordered - .editorconfig handles this. -->
    <Rule Id="SA1206" Action="None" />
    <!-- Enforce order of readonly vs. non-readonly members. -->
    <Rule Id="SA1214" Action="None" />
    <!-- Fields can't start with underscore. -->
    <Rule Id="SA1309" Action="None" />
    <!-- Suppressions must have a justification. -->
    <Rule Id="SA1404" Action="None" />
    <!-- Parameter documentation must be in the right order. -->
    <Rule Id="SA1612" Action="None" />
    <!-- Return value must be documented. -->
    <Rule Id="SA1615" Action="None" />
    <!-- Generic type parameters must be documented. -->
    <Rule Id="SA1618" Action="None" />
    <!-- Don't copy/paste documentation. -->
    <Rule Id="SA1625" Action="None" />
    <!-- Exception documentation must not be empty. -->
    <Rule Id="SA1627" Action="None" />
    <!-- Enable XML documentation output. -->
    <Rule Id="SA1652" Action="None" />
  </Rules>
</RuleSet>
